##########################################################################################

import numpy as np

##########################################################################################

'''
    The layout represents the blocks in the field. The [X,Y] represent relative positions on the Cartesian map;
    Blocks are layed out from left to right, top to bottom (but it can be changed);
    Use integer for odd; Use decimal for even;
    GCP layout has to be adjusted manually according to the blocking layout 
'''

class layoutbase:

    #experiment   
    b2x1 = np.matrix([[-.5,0],[.5,0]])    
    b3x3 = np.matrix([[-1,1],[0,1],[1,1],[-1,0],[0,0],[1,0],[-1,-1],[0,-1],[1,-1]])
    b2x2 = np.matrix([[-.5,.5],[.5,.5],[-.5,-.5],[.5,-.5]])
    b4x8 = np.matrix([[-1.5,3.5],[-0.5,3.5],[0.5,3.5],[1.5,3.5],[-1.5,2.5],[-0.5,2.5],[0.5,2.5],[1.5,2.5],[-1.5,1.5],[-0.5,0.5],[0.5,1.5],[1.5,1.5],[-1.5,0.5],[-0.5,0.5],[0.5,0.5],[1.5,0.5],[-1.5,-0.5],[-0.5,-0.5],[0.5,-0.5],[1.5,-0.5],[-1.5,-1.5],[-0.5,-1.5],[0.5,-1.5],[1.5,-1.5],[-1.5,-2.5],[-0.5,-2.5],[0.5,-2.5],[1.5,-2.5],[-1.5,-3.5],[-0.5,-3.5],[0.5,-3.5],[1.5,-3.5]])
    b4x5 = np.matrix([[-1.5,2.0],[-0.5,2.0],[0.5,2.0],[1.5,2.0],[-1.5,1.0],[-0.5,1.0],[0.5,1.0],[1.5,1.0],[-1.5,0],[-0.5,0],[0.5,0],[1.5,0],[-1.5,-1.0],[-0.5,-1.0],[0.5,-1.0],[1.5,-1.0],[-1.5,-2.0],[-0.5,-2.0],[0.5,-2.0],[1.5,-2.0]])
    b8x8 = np.matrix([[-3.5,3.5],[-2.5,3.5],[-1.5,3.5],[-0.5,3.5],[0.5,3.5],[1.5,3.5],[2.5,3.5],[3.5,3.5],[-3.5,2.5],[-2.5,2.5],[-1.5,2.5],[-0.5,2.5],[0.5,2.5],[1.5,2.5],[2.5,2.5],[3.5,2.5],[-3.5,1.5],[-2.5,1.5],[-1.5,1.5],[-0.5,0.5],[0.5,1.5],[1.5,1.5],[2.5,1.5],[3.5,1.5],[-3.5,0.5],[-2.5,0.5],[-1.5,0.5],[-0.5,0.5],[0.5,0.5],[1.5,0.5],[2.5,0.5],[3.5,0.5],[-3.5,-0.5],[-2.5,-0.5],[-1.5,-0.5],[-0.5,-0.5],[0.5,-0.5],[1.5,-0.5],[2.5,-0.5],[3.5,-0.5],[-3.5,-1.5],[-2.5,-1.5],[-1.5,-1.5],[-0.5,-1.5],[0.5,-1.5],[1.5,-1.5],[2.5,-1.5],[3.5,-1.5],[-3.5,-2.5],[-2.5,-2.5],[-1.5,-2.5],[-0.5,-2.5],[0.5,-2.5],[1.5,-2.5],[2.5,-2.5],[3.5,-2.5],[-3.5,-3.5],[-2.5,-3.5],[-1.5,-3.5],[-0.5,-3.5],[0.5,-3.5],[1.5,-3.5],[2.5,-3.5],[3.5,-3.5]])
    b2x7 = np.matrix([[-0.5,3.0],[0.5,3.0],[-0.5,2.0],[0.5,2.0],[-0.5,1.0],[0.5,1.0],[-0.5,0.0],[0.5,0.0],[-0.5,-1.0],[0.5,-1.0],[-0.5,-2.0],[0.5,-2.0],[-0.5,-3.0],[0.5,-3.0]])
    
    #gcp
    #g2x3b3x3 = np.matrix([[-1.8,2.3],[1.8,2.3],[0,-2.3],[0,2.3],[-1.8,-2.3],[1.8,-2.3]]) #4x5
    g2x3b3x3 = np.matrix([[-1,3],[1,3],[-1,0],[1,0],[-1,-3],[1,-3]]) #2x7
    #g2x3b3x3 = np.matrix([[-1.8,3.8],[1.8,3.8],[0,-3.8],[0,3.8],[-1.8,-3.8],[1.8,-3.8]])
    
layout = layoutbase